// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String     @unique
  username      String  
  password      String
  avatarUrl     String?
  profession    String?
  bio           String?
  address       String?
  websiteUrl    String?
  coverPhoto    String?
  role          Role       @default(STUDENT)
  progress      Progress[]  // Tracks progress of roadmaps
  roadmaps      Roadmap[]
  topics        Topic[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Roadmap {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String?
  authorId     String    @db.ObjectId
  author       User?     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  thumbnailUrl String?
  category     String
  tags         String[]     
  topics       Topic[]     // List of topics associated with the roadmap
  progress     Progress[]  // Tracks progress of users on this roadmap
  published    Boolean     @default(true)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Topic {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String?
  thumbnailUrl    String?  
  roadmap         Roadmap     @relation(fields: [roadmapId], references: [id], onDelete: Cascade)
  resources       Resource[]
  authorId        String      @db.ObjectId
  author          User?       @relation(fields: [authorId], references: [id])
  isDone          Boolean     @default(false)
  roadmapId       String      @db.ObjectId
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Resource {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  videoLink   String?
  driveLink   String?
  blogLink    String?
  topic       Topic     @relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId     String    @db.ObjectId
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Progress {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  userId          String   @db.ObjectId
  roadmap         Roadmap  @relation(fields: [roadmapId], references: [id])
  roadmapId       String   @db.ObjectId
  percentage      Float    @default(0) // Progress percentage based on how many topics completed / total topics to cover
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}



enum Role {
  ADMIN
  STUDENT
}
